{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leksyde/Documents/GitHub/spring-security-react-ant-design-polls-app/React-Learning/basic-form/user-registration/src/components/quizmain.js\";\nimport React, { Component } from 'react';\nimport Question from './questions/question';\nimport Answer from './answers/answer';\nexport default class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: {\n        1: 'What US city is known a the birthplace of jazz?',\n        2: 'What is the capital of greece?',\n        3: 'what planet gave birth to superman?'\n      },\n      answers: {\n        1: {\n          1: 'chicago',\n          2: 'lagos',\n          3: 'ogun state'\n        },\n        2: {\n          1: 'Athens',\n          2: 'mexico',\n          3: 'okofo'\n        },\n        3: {\n          1: 'Athens',\n          2: 'mexico',\n          3: 'okofo'\n        }\n      },\n      correctAnswers: {\n        1: '2',\n        2: '3',\n        3: '3'\n      },\n      correctAnswer: 0,\n      clickedAnswer: 0,\n      step: 1,\n      score: 0\n    };\n  }\n\n  render() {\n    let {\n      questions,\n      answers,\n      step\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: [/*#__PURE__*/_jsxDEV(Question, {\n        question: questions[step]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        answer: answers[step],\n        step: step\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/leksyde/Documents/GitHub/spring-security-react-ant-design-polls-app/React-Learning/basic-form/user-registration/src/components/quizmain.js"],"names":["React","Component","Question","Answer","Quiz","state","questions","answers","correctAnswers","correctAnswer","clickedAnswer","step","score","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAGA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACNC,MAAAA,SAAS,EAAC;AACR,WAAG,iDADK;AAER,WAAG,gCAFK;AAGR,WAAG;AAHK,OADJ;AAONC,MAAAA,OAAO,EAAE;AACP,WAAG;AACD,aAAE,SADD;AAED,aAAE,OAFD;AAGD,aAAE;AAHD,SADI;AAMP,WAAG;AACD,aAAE,QADD;AAED,aAAG,QAFF;AAGD,aAAG;AAHF,SANI;AAWP,WAAG;AACD,aAAE,QADD;AAED,aAAG,QAFF;AAGD,aAAG;AAHF;AAXI,OAPH;AAwBNC,MAAAA,cAAc,EAAC;AACb,WAAE,GADW;AAEb,WAAE,GAFW;AAGb,WAAE;AAHW,OAxBT;AA6BNC,MAAAA,aAAa,EAAC,CA7BR;AA8BNC,MAAAA,aAAa,EAAC,CA9BR;AA+BNC,MAAAA,IAAI,EAAE,CA/BA;AAgCNC,MAAAA,KAAK,EAAE;AAhCD,KADiC;AAAA;;AAmC3CC,EAAAA,MAAM,GAAE;AACN,QAAI;AAACP,MAAAA,SAAD;AAAYC,MAAAA,OAAZ;AAAqBI,MAAAA;AAArB,QAA4B,KAAKN,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACA,QAAC,QAAD;AACA,QAAA,QAAQ,EAAEC,SAAS,CAACK,IAAD;AADnB;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,MAAD;AACC,QAAA,MAAM,EAAGJ,OAAO,CAACI,IAAD,CADjB;AAEC,QAAA,IAAI,EAAGA;AAFR;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlD0C","sourcesContent":["import React, { Component } from 'react';\nimport Question from './questions/question'\nimport Answer from './answers/answer'\n\n\nexport default class Quiz extends Component{\n  state = {\n    questions:{\n      1: 'What US city is known a the birthplace of jazz?',\n      2: 'What is the capital of greece?',\n      3: 'what planet gave birth to superman?'\n\n    },\n    answers: {\n      1: {\n        1:'chicago',\n        2:'lagos',\n        3:'ogun state'\n      },\n      2: {\n        1:'Athens',\n        2: 'mexico',\n        3: 'okofo'\n      },\n      3: {\n        1:'Athens',\n        2: 'mexico',\n        3: 'okofo'\n      }\n    },\n    correctAnswers:{\n      1:'2',\n      2:'3',\n      3:'3'\n    },\n    correctAnswer:0,\n    clickedAnswer:0,\n    step: 1,\n    score: 0\n  }\nrender(){\n  let {questions, answers, step}= this.state;\n  return(\n    <div className=\"Content\">\n    <Question\n    question={questions[step]}\n    />\n\n    <Answer\n     answer= {answers[step]}\n     step= {step}\n     />\n    </div>\n\n  );\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module"}