{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/leksyde/Documents/GitHub/React-Quiz/src/components/quizmain.js\";\nimport React, { Component } from 'react';\nimport Question from './questions/question';\nimport Answer from './answers/answer';\nimport './quizmain.css';\nexport default class Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questions: {\n        1: 'When was github founded?',\n        2: 'What is the capital of india?',\n        3: 'Which is the largest country in the world?'\n      },\n      answers: {\n        1: {\n          1: '2006',\n          2: '2007',\n          3: '2008'\n        },\n        2: {\n          1: 'New Delhi',\n          2: 'Mexico',\n          3: 'Abuja'\n        },\n        3: {\n          1: 'India',\n          2: 'USA',\n          3: 'Russia'\n        }\n      },\n      correctAnswers: {\n        1: '3',\n        2: '1',\n        3: '3'\n      },\n      correctAnswer: 0,\n      clickedAnswer: 0,\n      step: 1,\n      score: 0\n    };\n\n    this.checkAnswer = answer => {\n      console.log(\"hi\");\n      const {\n        correctAnswers,\n        step,\n        score\n      } = this.state;\n\n      if (answer === correctAnswers[step]) {\n        this.setState({\n          score: score + 1,\n          correctAnswer: correctAnswers[step],\n          clickedAnswer: answer\n        });\n      } else {\n        this.setState({\n          correctAnswer: 0,\n          clickedAnswer: answer\n        });\n      }\n    };\n\n    this.NextStep = step => {\n      this.setState({\n        step: step + 1,\n        correctAnswer: 0,\n        clickedAnswer: 0\n      });\n    };\n  }\n\n  render() {\n    let {\n      questions,\n      correctAnswer,\n      clickedAnswer,\n      answers,\n      step,\n      score\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Content\",\n      children: step <= Object.keys(questions).length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: questions[step]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Answer, {\n          answer: answers[step],\n          checkAnswer: this.checkAnswer,\n          step: step,\n          correctAnswer: correctAnswer,\n          clickedAnswer: clickedAnswer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: clickedAnswer && Object.keys(questions).length >= step ? false : true,\n          className: \"NextStep\",\n          onClick: () => this.NextStep(step),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finalPage\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"you have completed the Quiz!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score is \", score, \" of \", Object.keys(questions).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/leksyde/Documents/GitHub/React-Quiz/src/components/quizmain.js"],"names":["React","Component","Question","Answer","Quiz","state","questions","answers","correctAnswers","correctAnswer","clickedAnswer","step","score","checkAnswer","answer","console","log","setState","NextStep","render","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Question from './questions/question'\nimport Answer from './answers/answer'\nimport './quizmain.css'\n\n\nexport default class Quiz extends Component{\n  state = {\n    questions:{\n      1: 'When was github founded?',\n      2: 'What is the capital of india?',\n      3: 'Which is the largest country in the world?'\n\n    },\n    answers: {\n      1: {\n        1:'2006',\n        2:'2007',\n        3:'2008'\n      },\n      2: {\n        1:'New Delhi',\n        2:'Mexico',\n        3:'Abuja'\n      },\n      3: {\n        1:'India',\n        2:'USA',\n        3:'Russia'\n      }\n    },\n    correctAnswers:{\n      1:'3',\n      2:'1',\n      3:'3'\n    },\n    correctAnswer:0,\n    clickedAnswer:0,\n    step: 1,\n    score: 0\n  }\n\n  checkAnswer = answer =>{\n      console.log(\"hi\")\n  const {correctAnswers, step, score}= this.state;\n  if(answer === correctAnswers[step]){\n\n    this.setState({\n\n      score: score + 1,\n      correctAnswer : correctAnswers[step],\n      clickedAnswer : answer\n\n\n    });\n\n  }else{\n\n    this.setState({\n      correctAnswer : 0,\n      clickedAnswer : answer\n    });\n  }\n}\n\nNextStep= step =>{\n  this.setState({\n    step:step+1,\n    correctAnswer : 0,\n    clickedAnswer : 0\n\n  });\n}\n\nrender(){\n  let {questions, correctAnswer, clickedAnswer,  answers, step, score}= this.state;\n  return(\n    <div className=\"Content\">\n{ step <=Object.keys(questions).length ?\n(  <><Question\n  question={questions[step]}\n  />\n\n  <Answer\n   answer= {answers[step]}\n   checkAnswer={this.checkAnswer}\n   step= {step}\n   correctAnswer= {correctAnswer }\n   clickedAnswer= {clickedAnswer }\n\n   />\n\n   <button\n   disabled={\n     clickedAnswer && Object.keys(questions).length  >= step\n     ? false :true\n   }\n   className=\"NextStep\"\n\n   onClick={()=> this.NextStep(step)}\n   >\n   Next\n    </button>\n    </>):(\n\n      <div className= \"finalPage\">\n      <h1>you have completed the Quiz!</h1>\n      <p>Your score is {score} of {Object.keys(questions).length}</p>\n      <p>Thank you!</p>\n      </div>\n    )\n\n\n}\n\n\n\n\n\n    </div>\n\n  );\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module"}